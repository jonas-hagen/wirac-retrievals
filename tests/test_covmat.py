import pytest
import numpy as np
from retrievals import covmat


@pytest.mark.current
def test_covmat_1d():
    reference = np.array(
        [0.090000, 0.054588, 0.033109, 0.020082, 0.012180, 0.007388, 0.004481, 0.002718, 0.000000, 0.000000, 0.054588,
         0.090000, 0.054588, 0.033109, 0.020082, 0.012180, 0.007388, 0.004481, 0.002718, 0.000000, 0.033109, 0.054588,
         0.090000, 0.054588, 0.033109, 0.020082, 0.012180, 0.007388, 0.004481, 0.002718, 0.020082, 0.033109, 0.054588,
         0.090000, 0.054588, 0.033109, 0.020082, 0.012180, 0.007388, 0.004481, 0.012180, 0.020082, 0.033109, 0.054588,
         0.090000, 0.054588, 0.033109, 0.020082, 0.012180, 0.007388, 0.007388, 0.012180, 0.020082, 0.033109, 0.054588,
         0.090000, 0.054588, 0.033109, 0.020082, 0.012180, 0.004481, 0.007388, 0.012180, 0.020082, 0.033109, 0.054588,
         0.090000, 0.054588, 0.033109, 0.020082, 0.002718, 0.004481, 0.007388, 0.012180, 0.020082, 0.033109, 0.054588,
         0.090000, 0.054588, 0.033109, 0.000000, 0.002718, 0.004481, 0.007388, 0.012180, 0.020082, 0.033109, 0.054588,
         0.090000, 0.054588, 0.000000, 0.000000, 0.002718, 0.004481, 0.007388, 0.012180, 0.020082, 0.033109, 0.054588,
         0.090000]).reshape((10, 10))

    x = np.arange(10)
    sigma = 0.3 * np.ones_like(x)
    cl = 2 * np.ones_like(x)
    cm = covmat.covmat_1d(x, sigma, cl, fname='exp', cutoff=0.02)

    assert np.allclose(cm, reference, atol=0.02)
